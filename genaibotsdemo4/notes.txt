export GOOGLE_CLOUD_PROJECT_ID=gab-devops-1
export GOOGLE_CLOUD_PROJECT_NUMBER=248688270572 
export GOOGLE_CLOUD_REGION=us-central1
export GOOGLE_CLOUD_ZONE=us-central1-a


npx create-next-app@latest client-app

npm i @google/generative-ai prompt-sync chalk
npm install @google-cloud/vertexai

npm run dev
pnpm run dev


npm add ai class-variance-authority clsx date-fns highlight.js lucide-react openai rehype-highlight react-markdown tailwind-merge tailwindcss-animate zustand
npm add -D @tailwindcss/typography css-loader style-loader prettier prettier-plugin-tailwindcss zod

npm add axios
# np add qs

npx shadcn-ui@latest init
npx shadcn-ui@latest add button
npx shadcn-ui@latest add input
npx shadcn-ui@latest add label
npx shadcn-ui@latest add separator
npx shadcn-ui@latest add textarea


#https://sdk.vercel.ai/providers/ai-sdk-providers/google-vertex
npm install @ai-sdk/google-vertex
npm install @ai-sdk/openai

gcloud auth application-default print-access-token

// new basic next app
npm install next@latest react@latest react-dom@latest
npm install next-auth@beta

#npm install pg

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

user@nextmail.com/123456

#npm add ai lucide-react
npm add ai class-variance-authority clsx date-fns highlight.js lucide-react openai rehype-highlight react-markdown tailwind-merge tailwindcss-animate zustand
#npm add -D @tailwindcss/typography css-loader style-loader prettier prettier-plugin-tailwindcss zod
#npm add @radix-ui/react-slot
npm add radix-ui
npm i @google/generative-ai prompt-sync chalk
npm install @google-cloud/vertexai
npm install @ai-sdk/google-vertex
npm install @ai-sdk/openai

npm install axios
npm install react-toastify

https://vercel.com/guides/nextjs-langchain-vercel-ai
https://github.com/vercel/next-learn
https://github.com/langchain-ai/langchain-nextjs-template

npm install langchain
pnpm install @langchain/core
npm install @langchain/google-vertexai
npm install @langchain/google-vertexai-web
npm install react@canary react-dom@canary

sudo npm install -g pnpm
pnpm install

gcloud run deploy

gcloud iam service-accounts create genai-bots-demo-sa \
  --display-name="vertex SA"

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
  --member="serviceAccount:genai-bots-demo-sa@$GOOGLE_CLOUD_PROJECT_ID.iam.gserviceaccount.com" \
  --role="roles/aiplatform.user"

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
  --member="serviceAccount:genai-bots-demo-sa@$GOOGLE_CLOUD_PROJECT_ID.iam.gserviceaccount.com" \
  --role="roles/serviceusage.serviceUsageConsumer" 

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
  --member="serviceAccount:genai-bots-demo-sa@$GOOGLE_CLOUD_PROJECT_ID.iam.gserviceaccount.com" \
  --role="roles/dialogflow.agentAssistClient"

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
  --member="serviceAccount:service-$GOOGLE_CLOUD_PROJECT_NUMBER@gcp-sa-aiplatform-re.iam.gserviceaccount.com" \
  --role="roles/discoveryengine.viewer"


gcloud run deploy --service-account genai-bots-demo-sa@gab-devops-1.iam.gserviceaccount.com



Setting for the defualt agent of the agent app 

Goal :
Get the a currency conversion

Instructions :
- Greet the user
- Give a very detailed anwser
- Answer in French
- Convert using ${TOOL:currency-tool-1}
- Thank the user and say goodbuy

Use currencytool.yaml in the openapi yaml schema of currency-tool-1

list(agent_executor.stream({"input": "What is the value of 1000 euros in gbp?"}))  
list(agent_executor.stream({"input": "What was Alphabet's Revenue in Q2 2023?"})) 